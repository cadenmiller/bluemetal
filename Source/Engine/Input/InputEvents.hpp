#pragma once

#include "Core/CallbackList.hpp"
#include "Core/Macros.hpp"

#include "SDL_events.h"

using blGenericEvent = uint32_t;

enum class blEventTypeFlagBits : uint32_t {
    eSDLBit = BIT(0),
    eKeyboardBit = BIT(1),
    eMouseButtonBit = BIT(2),
    eMouseBit = BIT(3),
    eGamepadButton = BIT(4),
    eGamepadThumbstickBit = BIT(5),
    eGamepadTriggerBit = BIT(6),
    eWindowBit = BIT(7),
    eAllBit = eKeyboardBit | eMouseButtonBit | eMouseBit | eGamepadButton | eGamepadThumbstickBit
        | eGamepadTriggerBit | eWindowBit,
    eAllWithSDLBit = 0xFFFFFFFF,
};

using blEventTypeFlags = uint32_t;

enum class blEventValueType {
    eSDL = 0x00000000,
    eFloat = 0x00000001,
    eVector2f = 0x00000002,
};

union blEventValue {
    float f;
    blVector2f v2;
    const SDL_Event* event;
};

enum class blKey : uint32_t {
    eUnknown = 0x00000000,
    eReturn = 0x00000081,
    eEscape = 0x00000082,
    eBackspace = 0x00000083,
    eTab = 0x00000084,
    eSpace = 0x00000085,
    eExclaim = 0x00000086,
    eQuoteDbl = 0x00000087,
    eHash = 0x00000088,
    ePercent = 0x00000089,
    eDollar = 0x0000008A,
    eAmpersand = 0x0000008B,
    eQuote = 0x0000008C,
    eLeftParen = 0x0000008D,
    eRightParen = 0x0000008E,
    eAsterisk = 0x0000008F,
    ePlus = 0x00000090,
    eComma = 0x00000091,
    eMinus = 0x00000092,
    ePeriod = 0x00000093,
    eSlash = 0x00000094,
    e0 = 0x00000095,
    e1 = 0x00000096,
    e2 = 0x00000097,
    e3 = 0x00000098,
    e4 = 0x00000099,
    e5 = 0x0000009A,
    e6 = 0x0000009B,
    e7 = 0x0000009C,
    e8 = 0x0000009D,
    e9 = 0x0000009E,
    eColon = 0x0000009F,
    eSemicolon = 0x000000A0,
    eLess = 0x000000A1,
    eEquals = 0x000000A2,
    eGreater = 0x000000A3,
    eQuestion = 0x000000A4,
    eAt = 0x000000A5,
    eLeftBracket = 0x000000A6,
    eBackslash = 0x000000A7,
    eRightBracket = 0x000000A8,
    eCaret = 0x000000A9,
    eUnderscore = 0x000000AA,
    eBackquote = 0x000000AB,
    eA = 0x000000AC,
    eB = 0x000000AD,
    eC = 0x000000AE,
    eD = 0x000000AF,
    eE = 0x000000B0,
    eF = 0x000000B1,
    eG = 0x000000B2,
    eH = 0x000000B3,
    eI = 0x000000B4,
    eJ = 0x000000B5,
    eK = 0x000000B6,
    eL = 0x000000B7,
    eM = 0x000000B8,
    eN = 0x000000B9,
    eO = 0x000000BA,
    eP = 0x000000BB,
    eQ = 0x000000BC,
    eR = 0x000000BD,
    eS = 0x000000BE,
    eT = 0x000000BF,
    eU = 0x000000C0,
    eV = 0x000000C1,
    eW = 0x000000C2,
    eX = 0x000000C3,
    eY = 0x000000C4,
    eZ = 0x000000C5,
    eCapsLock = 0x000000C6,
    eF1 = 0x000000C7,
    eF2 = 0x000000C8,
    eF3 = 0x000000C9,
    eF4 = 0x000000CA,
    eF5 = 0x000000CB,
    eF6 = 0x000000CC,
    eF7 = 0x000000CD,
    eF8 = 0x000000CE,
    eF9 = 0x000000CF,
    eF10 = 0x000000D0,
    eF11 = 0x000000D1,
    eF12 = 0x000000D2,
    ePrintScreen = 0x000000D3,
    eScrollLock = 0x000000D4,
    ePause = 0x000000D5,
    eInsert = 0x000000D6,
    eHome = 0x000000D7,
    ePageUp = 0x000000D8,
    eDelete = 0x000000D9,
    eEnd = 0x000000DA,
    ePageDown = 0x000000DB,
    eRight = 0x000000DC,
    eLeft = 0x000000DD,
    eDown = 0x000000DE,
    eUp = 0x000000DF,
    eNumLockClear = 0x000000E0,
    eKpDivide = 0x000000E1,
    eKpMultiply = 0x000000E2,
    eKpMinus = 0x000000E3,
    eKpPlus = 0x000000E4,
    eKpEnter = 0x000000E5,
    eKp_1 = 0x000000E6,
    eKp_2 = 0x000000E7,
    eKp_3 = 0x000000E8,
    eKp_4 = 0x000000E9,
    eKp_5 = 0x000000EA,
    eKp_6 = 0x000000EB,
    eKp_7 = 0x000000EC,
    eKp_8 = 0x000000ED,
    eKp_9 = 0x000000EE,
    eKp_0 = 0x000000EF,
    eKpPeriod = 0x000000F0,
    eApplication = 0x000000F1,
    ePower = 0x000000F2,
    eKpEquals = 0x000000F3,
    eF13 = 0x000000F4,
    eF14 = 0x000000F5,
    eF15 = 0x000000F6,
    eF16 = 0x000000F7,
    eF17 = 0x000000F8,
    eF18 = 0x000000F9,
    eF19 = 0x000000FA,
    eF20 = 0x000000FB,
    eF21 = 0x000000FC,
    eF22 = 0x000000FD,
    eF23 = 0x000000FE,
    eF24 = 0x000000FF,
    eExecute = 0x00000100,
    eHelp = 0x00000101,
    eMenu = 0x00000102,
    eSelect = 0x00000103,
    eStop = 0x00000104,
    eAgain = 0x00000105,
    eUndo = 0x00000106,
    eCut = 0x00000107,
    eCopy = 0x00000108,
    ePaste = 0x00000109,
    eFind = 0x0000010A,
    eMute = 0x0000010B,
    eVolumeUp = 0x0000010C,
    eVolumeDown = 0x0000010D,
    eKpComma = 0x0000010E,
    eKpEqualSas400 = 0x0000010F,
    eAltErase = 0x00000110,
    eSysReq = 0x00000111,
    eCancel = 0x00000112,
    eClear = 0x00000113,
    ePrior = 0x00000114,
    eReturn2 = 0x00000115,
    eSeparator = 0x00000116,
    eOut = 0x00000117,
    eOper = 0x00000118,
    eClearAgain = 0x00000119,
    eCrsel = 0x0000011A,
    eExsel = 0x0000011B,
    eKp_00 = 0x0000011C,
    eKp_000 = 0x0000011D,
    eThousandsSeparator = 0x0000011E,
    eDecimalSeparator = 0x0000011F,
    eCurrencyUnit = 0x00000120,
    eCurrencySubUnit = 0x00000121,
    eKpLeftParen = 0x00000122,
    eKpRightParen = 0x00000123,
    eKpLeftBrace = 0x00000124,
    eKpRightBrace = 0x00000125,
    eKpTab = 0x00000126,
    eKpBackspace = 0x00000127,
    eKpA = 0x00000128,
    eKpB = 0x00000129,
    eKpC = 0x0000012A,
    eKpD = 0x0000012B,
    eKpE = 0x0000012C,
    eKpF = 0x0000012D,
    eKpXor = 0x0000012E,
    eKpPower = 0x0000012F,
    eKpPercent = 0x00000130,
    eKpLess = 0x00000131,
    eKpGreater = 0x00000132,
    eKpAmpersand = 0x00000133,
    eKpDblAmpersand = 0x00000134,
    eKpVerticalBar = 0x00000135,
    eKpDblVerticalBar = 0x00000136,
    eKpColon = 0x00000137,
    eKpHash = 0x00000138,
    eKpSpace = 0x00000139,
    eKpAt = 0x0000013A,
    eKpExclam = 0x0000013B,
    eKpMemStore = 0x0000013C,
    eKpMemRecall = 0x0000013D,
    eKpMemClear = 0x0000013E,
    eKpMemAdd = 0x0000013F,
    eKpMemSubtract = 0x00000140,
    eKpMemMultiply = 0x00000141,
    eKpMemDivide = 0x00000142,
    eKpPlusMinus = 0x00000143,
    eKpClear = 0x00000144,
    eKpClearEntry = 0x00000145,
    eKpBinary = 0x00000146,
    eKpOctal = 0x00000147,
    eKpDecimal = 0x00000148,
    eKpHexadecimal = 0x00000149,
    eLCtrl = 0x0000014A,
    eLShift = 0x0000014B,
    eLAlt = 0x0000014C,
    eLGui = 0x0000014D,
    eRCtrl = 0x0000014E,
    eRShift = 0x0000014F,
    eRAlt = 0x00000150,
    eRGui = 0x00000151,
    eMode = 0x00000152,
    eAudioNext = 0x00000153,
    eAudioPrev = 0x00000154,
    eAudioStop = 0x00000155,
    eAudioPlay = 0x00000156,
    eAudioMute = 0x00000157,
    eMediaSelect = 0x00000158,
    eWww = 0x00000159,
    eMail = 0x0000015A,
    eCalculator = 0x0000015B,
    eComputer = 0x0000015C,
    eAcSearch = 0x0000015D,
    eAcHome = 0x0000015E,
    eAcBack = 0x0000015F,
    eAcForward = 0x00000160,
    eAcStop = 0x00000161,
    eAcRefresh = 0x00000162,
    eAcBookmarks = 0x00000163,
    eBrightnessDown = 0x00000164,
    eBrightnessUp = 0x00000165,
    eDisplaySwitch = 0x00000166,
    eKbdIllumToggle = 0x00000167,
    eKbdIllumDown = 0x00000168,
    eKbdIllumUp = 0x00000169,
    eEject = 0x0000016A,
    eSleep = 0x0000016B,
    eApp1 = 0x0000016C,
    eApp2 = 0x0000016D,
    eAudioRewind = 0x0000016E,
    eAudioFastForward = 0x0000016F,
    eSoftLeft = 0x00000170,
    eSoftRight = 0x00000171,
    eCall = 0x00000172,
    eEndCall = 0x00000173,
    eStartEnum = eReturn,
    eEndEnum = eEndCall,
};

enum class blWindowEvent : uint32_t {
    eUnknown = 0x0000000,
    eResize = 0x0001000,
    eMinimize = 0x0001001,
    eMaximize = 0x0001002,
    eClose = 0x0001003,
    eMove = 0x0001004,
    eStartEnum = eResize,
    eEndEnum = eMove,
};

enum class blMouseButtonEvent : uint32_t {
    eUnknown = 0x0000000,
    eLeft = 0X0002001,
    eRight = 0x0002002,
    eMiddle = 0x0002003,
    eSideFront = 0x0002004,
    eSideBack = 0x0002005,
    eStartEnum = eLeft,
    eEndEnum = eSideBack,
};

enum class blMouseEvent : uint32_t {
    eUnknown = 0x0000000,
    eMove = 0x0003000,
    eScroll = 0x0003001,
    eStartEnum = eMove,
    eEndEnum = eScroll
};

enum class blGamepadButtonEvent : uint32_t {
    eUnknown = 0x0000000,
    eA = 0x0004001,
    eB = 0x0004002,
    eX = 0x0004003,
    eY = 0x0004004,
    eLeftBumper = 0x0004005,
    eRightBumper = 0x0004006,
    eBack = 0x0004007,
    eStart = 0x0004008,
    eGuide = 0x0004009,
    eLeftThumb = 0x000400A,
    eRightThumb = 0x000400B,
    eDPadUp = 0x000400C,
    eDPadRight = 0x000400D,
    eDPadDown = 0x000400E,
    eDPadLeft = 0x000400F,
    eStartEnum = eA,
    eEndEnum = eDPadLeft,
};

enum class blGamepadThumbstickEvent : uint32_t {
    eUnknown = 0x00000000,
    eLeftThumbstick = 0x00005000,
    eRightThumbstick = 0x00005001,
    eStartEnum = eLeftThumbstick,
    eEndEnum = eRightThumbstick,
};

enum class blGamepadTriggerEvent : uint32_t {
    eUnknown = 0x00000000,
    eLeftTrigger = 0x00006001,
    eRightTrigger = 0x00006002,
    eStartEnum = eLeftTrigger,
    eEndEnum = eRightTrigger,
};

enum class blButton : uint8_t {
    eReleased = 0x00000000,
    ePressed = 0x00000001,
};